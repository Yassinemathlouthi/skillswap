{% extends 'base.html.twig' %}

{% block title %}Nearby Users Map - SkillSwap{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI=" crossorigin=""/>
{% endblock %}

{% block body %}
<div class="container-fluid py-5">
    <div class="d-flex align-items-center justify-content-between mb-4">
        <h1 class="h3"><i class="fas fa-map text-primary me-2"></i>Nearby Users Map</h1>
        <div>
            <a href="{{ path('app_nearby') }}" class="btn btn-outline-primary">
                <i class="fas fa-list me-2"></i>List View
            </a>
        </div>
    </div>

    <div class="row g-4">
        <div class="col-lg-3">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">Filter</h5>
                </div>
                <div class="card-body">
                    <form action="{{ path('app_nearby_map') }}" method="get" id="filterForm">
                        <div class="mb-3">
                            <label for="radius" class="form-label">Distance (km)</label>
                            <div class="d-flex align-items-center">
                                <input type="range" class="form-range flex-grow-1 me-2" id="radius" name="radius" min="5" max="500" step="5" value="{{ radius }}" oninput="this.nextElementSibling.value = this.value">
                                <output>{{ radius }}</output>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Skills</label>
                            <div class="skills-container border rounded p-2" style="max-height: 200px; overflow-y: auto;">
                                {% for skill in skills %}
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" value="{{ skill.id }}" id="skill{{ skill.id }}" name="skills[]" 
                                            {% if skill.id in selectedSkills|map(s => s.id) %}checked{% endif %}>
                                        <label class="form-check-label" for="skill{{ skill.id }}">
                                            {{ skill.name }}
                                        </label>
                                    </div>
                                {% endfor %}
                            </div>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-filter me-2"></i>Apply Filters
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">Users Found</h5>
                </div>
                <div class="card-body p-0">
                    {% if users is empty %}
                        <div class="p-4 text-center">
                            <p class="text-muted mb-0">No users found within {{ radius }} km.</p>
                        </div>
                    {% else %}
                        <div class="list-group list-group-flush user-list" style="max-height: 500px; overflow-y: auto;">
                            {% for userWithDistance in users %}
                                {% set user = userWithDistance[0] %}
                                {% set distance = userWithDistance.distance|round(1) %}
                                <div class="list-group-item list-group-item-action user-item p-3" data-user-id="{{ user.id }}" data-lat="{{ user.latitude }}" data-lng="{{ user.longitude }}">
                                    <div class="d-flex align-items-center">
                                        <!-- User avatar -->
                                        <div class="flex-shrink-0 me-3">
                                            {% if user.avatar %}
                                                <img src="{{ asset('uploads/avatars/' ~ user.avatar) }}" alt="{{ user.username }}" class="rounded-circle" width="40" height="40">
                                            {% else %}
                                                <div class="avatar-placeholder rounded-circle d-flex align-items-center justify-content-center" style="width: 40px; height: 40px; background-color: var(--primary-color); color: white;">
                                                    {{ user.username|first|upper }}
                                                </div>
                                            {% endif %}
                                        </div>
                                        
                                        <!-- User info -->
                                        <div>
                                            <div class="d-flex align-items-center mb-1">
                                                <h6 class="mb-0 me-2">{{ user.username }}</h6>
                                                <span class="badge bg-primary">{{ distance }} km</span>
                                            </div>
                                            
                                            <!-- User skills preview -->
                                            <div class="small text-muted">
                                                {% if user.skillsOffered|length > 0 %}
                                                    {{ user.skillsOffered|length }} skills offered
                                                {% endif %}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    {% endif %}
                </div>
            </div>
        </div>

        <div class="col-lg-9">
            <div class="card shadow-sm">
                <div class="card-body p-0">
                    <div id="map" style="height: 700px;"></div>
                </div>
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js" integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM=" crossorigin=""></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize map centered on current user
            const map = L.map('map').setView([{{ currentUser.latitude }}, {{ currentUser.longitude }}], 11);
            
            // Add OpenStreetMap tile layer
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);
            
            // Add marker for current user
            const currentUserIcon = L.icon({
                iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',
                shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41]
            });
            
            const currentUserMarker = L.marker([{{ currentUser.latitude }}, {{ currentUser.longitude }}], {
                icon: currentUserIcon
            }).addTo(map);
            
            currentUserMarker.bindPopup("<strong>Your Location</strong><br>{{ currentUser.location }}");
            
            // Add markers for other users
            const userIcon = L.icon({
                iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
                shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41]
            });
            
            const markers = {};
            {% for userWithDistance in users %}
                {% set user = userWithDistance[0] %}
                {% set distance = userWithDistance.distance|round(1) %}
                
                const marker{{ user.id }} = L.marker([{{ user.latitude }}, {{ user.longitude }}], {
                    icon: userIcon
                }).addTo(map);
                
                marker{{ user.id }}.bindPopup(`
                    <div class="text-center mb-2">
                        {% if user.avatar %}
                            <img src="{{ asset('uploads/avatars/' ~ user.avatar) }}" alt="{{ user.username }}" class="rounded-circle mb-2" width="50" height="50">
                        {% else %}
                            <div class="avatar-placeholder rounded-circle d-flex align-items-center justify-content-center mx-auto mb-2" style="width: 50px; height: 50px; background-color: var(--primary-color); color: white;">
                                {{ user.username|first|upper }}
                            </div>
                        {% endif %}
                        <strong>{{ user.username }}</strong><br>
                        <span class="badge bg-primary mb-2">{{ distance }} km</span>
                    </div>
                    <div class="d-flex flex-wrap gap-1 mb-2">
                        {% for skillOffered in user.skillsOffered|slice(0, 3) %}
                            <span class="badge bg-success">{{ skillOffered.skill.name }}</span>
                        {% endfor %}
                    </div>
                    <div class="text-center mt-2">
                        <a href="{{ path('app_profile_view', {'username': user.username}) }}" class="btn btn-sm btn-primary w-100">View Profile</a>
                    </div>
                `);
                
                markers[{{ user.id }}] = marker{{ user.id }};
            {% endfor %}
            
            // Highlight user on the map when clicking on the list
            const userItems = document.querySelectorAll('.user-item');
            userItems.forEach(item => {
                item.addEventListener('click', function() {
                    const userId = this.dataset.userId;
                    const marker = markers[userId];
                    
                    if (marker) {
                        map.setView([this.dataset.lat, this.dataset.lng], 14);
                        marker.openPopup();
                    }
                    
                    // Highlight selected user
                    userItems.forEach(u => u.classList.remove('active'));
                    this.classList.add('active');
                });
            });
            
            // Add circle showing search radius
            L.circle([{{ currentUser.latitude }}, {{ currentUser.longitude }}], {
                color: 'rgba(76, 110, 245, 0.2)',
                fillColor: 'rgba(76, 110, 245, 0.1)',
                fillOpacity: 0.5,
                radius: {{ radius * 1000 }} // Convert to meters
            }).addTo(map);
            
            // Fit bounds to include all markers
            const bounds = [];
            bounds.push([{{ currentUser.latitude }}, {{ currentUser.longitude }}]);
            
            {% for userWithDistance in users %}
                {% set user = userWithDistance[0] %}
                bounds.push([{{ user.latitude }}, {{ user.longitude }}]);
            {% endfor %}
            
            if (bounds.length > 1) {
                map.fitBounds(bounds);
            }
        });
    </script>
{% endblock %}
{% endblock %} 